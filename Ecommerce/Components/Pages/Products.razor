@page "/products"
 
@rendermode InteractiveServer  
@inject NavigationManager NavigationManager

<PageTitle>Produk Kami | New Design Print</PageTitle>

@if (isLoading)
{
    <div class="fixed inset-0 bg-white bg-opacity-75 flex items-center justify-center z-[9998]">
        <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-pink-600"></div>
    </div>
}
else
{
    <div class="container mx-auto px-4 sm:px-6 py-12 sm:py-16 lg:py-20">
        <div class="text-center mb-10 sm:mb-12">
            <h1 class="text-3xl sm:text-4xl font-bold text-gray-800 mb-3">Katalog Produk Kami</h1>
            <p class="text-lg text-gray-600 max-w-2xl mx-auto">
                Temukan beragam solusi cetak custom berkualitas tinggi untuk kebutuhan personal, promosi, maupun bisnis Anda.
            </p>
        </div>

        <div class="mb-8 p-4 bg-gray-50 rounded-lg shadow">
            <div class="flex flex-col sm:flex-row justify-between items-center gap-4">
                <div class="relative w-full sm:w-1/2 lg:w-1/3">
                    <input type="text" placeholder="Cari produk..." @bind="searchTerm" @oninput="ApplyFilters"
                           class="w-full py-2 px-4 pr-10 rounded-md border-gray-300 shadow-sm focus:border-pink-500 focus:ring-pink-500">
                    <span class="absolute inset-y-0 right-0 flex items-center pr-3 text-gray-400">
                        <i class="fas fa-search"></i>
                    </span>
                </div>
                <div class="relative w-full sm:w-auto">
                    <select @bind="selectedCategory"  
                            class="w-full sm:w-auto py-2 px-4 pr-10 rounded-md border-gray-300 shadow-sm focus:border-pink-500 focus:ring-pink-500">
                        <option value="">Semua Kategori</option>
                        @foreach (var category in allCategories)
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>
            </div>
        </div>

        @if (filteredProducts == null || !filteredProducts.Any())
        {
            <div class="text-center py-10">
                <i class="fas fa-box-open fa-3x text-gray-400 mb-4"></i>
                <p class="text-xl text-gray-500">
                    @if (string.IsNullOrWhiteSpace(searchTerm) && string.IsNullOrWhiteSpace(selectedCategory))
                    {
                        <span>Belum ada produk yang ditampilkan.</span>
                    }
                    else
                    {
                        <span>Tidak ada produk yang cocok dengan kriteria Anda.</span>
                    }
                </p>
            </div>
        }
        else
        {
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 sm:gap-8">
                @foreach (var product in filteredProducts)
                {
                    <div class="product-card bg-white rounded-lg shadow-lg overflow-hidden flex flex-col group transition-all duration-300 hover:shadow-xl">
                        <div class="relative h-64 bg-gray-200">
                            <img src="@product.ImageUrl" alt="@product.Name" class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105" />
                            @if (!string.IsNullOrWhiteSpace(product.Tag))
                            {
                                <span class="absolute top-3 left-3 bg-pink-600 text-white text-xs font-semibold px-2.5 py-1 rounded-full shadow">@product.Tag</span>
                            }
                        </div>
                        <div class="p-5 flex flex-col flex-grow">
                            <h3 class="text-xl font-semibold text-gray-800 mb-2 min-h-[3.5rem] group-hover:text-pink-600 transition-colors">@product.Name</h3>
                            <p class="text-sm text-gray-600 mb-3 min-h-[3rem] flex-grow">@product.ShortDescription</p>
                            <p class="text-2xl font-bold text-pink-600 mb-4">
                                @if (product.Price > 0)
                                {
                                    <span>@product.Price.ToString("c0", new System.Globalization.CultureInfo("id-ID"))</span>
                                }
                                else
                                {
                                    <span class="text-lg">Hubungi Kami</span>
                                }
                            </p>
                            <div class="mt-auto">
                                <button @onclick="() => NavigateToProductDetail(product.Id)"
                                   class="w-full bg-gray-700 hover:bg-pink-600 text-white font-semibold py-2.5 px-4 rounded-md transition-colors duration-300 flex items-center justify-center">
                                    <i class="fas fa-eye mr-2"></i> Lihat Detail
                                </button>
                                <a href="@($"https://wa.me/{product.WhatsAppNumber}?text={System.Web.HttpUtility.UrlEncode($"Halo, saya tertarik dengan produk {product.Name} ({product.Id}) yang saya lihat di website.")}")"
                                   target="_blank"
                                   class="block w-full mt-2 bg-green-500 hover:bg-green-600 text-white font-semibold py-2.5 px-4 rounded-md transition-colors duration-300 flex items-center justify-center">
                                    <i class="fab fa-whatsapp mr-2"></i> Pesan via WhatsApp
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
         <div class="mt-12 flex justify-center">
            <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                    <span class="sr-only">Previous</span>
                    <i class="fas fa-chevron-left h-5 w-5"></i>
                </a>
                <a href="#" aria-current="page" class="z-10 bg-pink-50 border-pink-500 text-pink-600 relative inline-flex items-center px-4 py-2 border text-sm font-medium"> 1 </a>
                <a href="#" class="bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium"> 2 </a>
                <span class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700"> ... </span>
                <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                    <span class="sr-only">Next</span>
                    <i class="fas fa-chevron-right h-5 w-5"></i>
                </a>
            </nav>
        </div>
    </div>
}

@code {
    private bool isLoading = true;
    private List<ProductItem>? allProducts;
    private List<ProductItem>? filteredProducts;
    private List<string> allCategories = new List<string>();

    private string searchTerm = string.Empty;
    private string selectedCategory = string.Empty;

    private const string DefaultWhatsAppNumber = "6285156615269"; // Ganti dengan nomor WA default Anda

    public class ProductItem
    {
        public string Id { get; set; } = Guid.NewGuid().ToString("N");
        public string Name { get; set; } = string.Empty;
        public string ShortDescription { get; set; } = string.Empty;
        public decimal Price { get; set; } // 0 jika harga "Hubungi Kami"
        public string ImageUrl { get; set; } = "https://placehold.co/400x300/E2E8F0/A0AEC0?text=Produk";
        public string Category { get; set; } = string.Empty;
        public string Tag { get; set; } = string.Empty; // Misalnya "BARU", "DISKON"
        public string WhatsAppNumber { get; set; } = DefaultWhatsAppNumber; // Bisa di-override per produk
    }

    protected override async Task OnInitializedAsync()
    {
        // Simulasi pengambilan data
        await Task.Delay(700);
        InitializeProducts();
        ApplyFilters(); // Terapkan filter awal (tampilkan semua)
        isLoading = false;
    }

    private void InitializeProducts()
    {
        allProducts = new List<ProductItem>
        {
            new ProductItem {
                Id = "b7d6d2ae7bea4d4d9210923b47e6c61c",
                Name = "Kaos Custom Sablon DTF",
                ShortDescription = "Kaos katun berkualitas dengan sablon DTF full color. Desain suka-suka!",
                Price = 85000,
                Category = "Apparel",
                Tag = "Best Seller",
                ImageUrl = "https://placehold.co/400x300/FBCFE8/831843?text=Kaos+DTF"
            },
            new ProductItem {
                Name = "Mug Keramik Custom Foto",
                ShortDescription = "Cetak foto, logo, atau tulisan di mug keramik. Cocok untuk souvenir.",
                Price = 45000,
                Category = "Souvenir",
                ImageUrl = "https://placehold.co/400x300/A5B4FC/312E81?text=Mug+Custom"
            },
            new ProductItem {
                Name = "Payung Lipat Promosi",
                ShortDescription = "Payung lipat otomatis dengan sablon logo perusahaan Anda. Pilihan warna beragam.",
                Price = 0, // Artinya "Hubungi Kami"
                Category = "Merchandise",
                Tag = "Promosi",
                ImageUrl = "https://placehold.co/400x300/93C5FD/1E40AF?text=Payung+Promosi"
            },
            new ProductItem {
                Name = "Banner Spanduk Outdoor",
                ShortDescription = "Cetak banner atau spanduk berbagai ukuran untuk kebutuhan promosi outdoor. Bahan flexi tahan lama.",
                Price = 25000, // Harga per meter (misalnya)
                Category = "Media Promosi",
                ImageUrl = "https://placehold.co/400x300/DDD6FE/4338CA?text=Banner"
            },
            new ProductItem {
                Name = "Topi Baseball Bordir Custom",
                ShortDescription = "Topi baseball dengan bordir logo atau tulisan. Kualitas bordir presisi.",
                Price = 65000,
                Category = "Apparel",
                ImageUrl = "https://placehold.co/400x300/BFDBFE/1D4ED8?text=Topi+Bordir"
            },
            new ProductItem {
                Name = "Lanyard ID Card Full Print",
                ShortDescription = "Lanyard ID card dengan printing full color. Bahan tisu atau polyester.",
                Price = 15000,
                Category = "Aksesoris",
                Tag = "BARU",
                ImageUrl = "https://placehold.co/400x300/FECACA/991B1B?text=Lanyard"
            },
            new ProductItem {
                Name = "Gantungan Kunci Akrilik",
                ShortDescription = "Gantungan kunci akrilik custom, bisa potong sesuai bentuk. Cetak UV.",
                Price = 8000,
                Category = "Souvenir",
                ImageUrl = "https://placehold.co/400x300/FED7AA/9A3412?text=Ganci+Akrilik"
            },
            new ProductItem {
                Name = "Jaket Hoodie Komunitas",
                ShortDescription = "Jaket hoodie bahan fleece tebal dengan sablon atau bordir logo komunitas.",
                Price = 175000,
                Category = "Apparel",
                ImageUrl = "https://placehold.co/400x300/BBF7D0/166534?text=Hoodie"
            }
        };

        allCategories = allProducts.Select(p => p.Category).Distinct().OrderBy(c => c).ToList();
    }

    private void ApplyFilters()
    {
        if (allProducts == null)
        {
            filteredProducts = new List<ProductItem>();
            return;
        }

        IEnumerable<ProductItem> query = allProducts;

        if (!string.IsNullOrWhiteSpace(selectedCategory))
        {
            query = query.Where(p => p.Category.Equals(selectedCategory, StringComparison.OrdinalIgnoreCase));
        }

        if (!string.IsNullOrWhiteSpace(searchTerm))
        {
            query = query.Where(p =>
                p.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                p.ShortDescription.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                p.Category.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)
            );
        }

        filteredProducts = query.ToList();
    }

    private void NavigateToProductDetail(string productId)
    {
        // Arahkan ke halaman detail produk. Anda perlu membuat halaman [ProductId].razor atau serupa.
        NavigationManager.NavigateTo($"/products/{productId}");
        // Contoh: Jika produk ID "kaos-custom-dtf", URL menjadi /products/kaos-custom-dtf
    }
}